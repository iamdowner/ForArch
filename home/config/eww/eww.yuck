(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (box :class "time" time)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "󰕾"
            :value volume
            :onchange "scripts/getvol")
    (metric :label "󰍛"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label ""
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")))

(deflisten SPACES :initial '{"active":0,"workspaces":[]}' "scripts/eww-ws")

(defwidget workspaces []
  (box :class "workspaces"
  (for entry in "${SPACES.workspaces}"
    (button :onclick "hyprctl dispatch workspace ${entry.id}"
      "${entry.name}"))))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :value value
           :active {onchange != ""}
           :onchange onchange)))

(defpoll volume :initial 0.0 :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
